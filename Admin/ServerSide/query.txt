INSERT INTO attendance(date, student_id, present, absent, subject_id, course_id, teacher_id) SELECT CURRENT_DATE, s.student_id, "YES", "No", ss.subject_id, s.course_id, ss.teacher_id from Students s, Subjects ss;

INSERT INTO attendance(date, student_id, present, absent, subject_id, course_id, teacher_id) SELECT CURRENT_DATE, s.student_id, "YES", "No", ss.subject_id, s.course_id, ss.teacher_id from Students s, Subjects ss WHERE s.course_id=%s, s.year=



from datetime import datetime

birthday = datetime(1988, 2, 19, 12, 0, 0)
diff = datetime.now() - birthday
print diff


IF(NOT EXISTS(SELECT 1 FROM dbo.MyTable))
BEGIN
  RAISERROR('MyError',16,10);
END;

searchAttendance function check = checked
ToralPresentCount else part write after date table is created.

CREATE TABLE 2022-03-05 as SELECT student_id, present, absent, year, subject_id, course_id, teacher_id FROM Attendance where date = '2022-03-05'


# def backupAttendance(self):
    #     try:
    #         self.cur.execute("SELECT date FROM Attendance")
    #         table_name = self.cur.fetchone()
    #         backup_table = table_name[0]
    #         if table_name:
    #             previous_date = date.today() - timedelta(days=1)
    #             delete = '-'
    #             for c in delete:
    #                 backup_table = backup_table.replace(c, '')
    #             backup_table = 'd' + backup_table
    #             if table_name[0] == str(previous_date):
    #                 query = "CREATE TABLE {backup_table} AS SELECT student_id, present, absent, year, subject_id, course_id, teacher_id FROM Attendance where date = %s".format(
    #                     backup_table=backup_table)
    #                 value = [table_name[0]]
    #                 self.cur.execute(query, value)
    #                 query = "DELETE FROM Attendance WHERE date = %s"
    #                 value = [table_name[0]]
    #                 self.cur.execute(query, value)
    #                 self.conn.commit()
    #                 return True
    #             else:
    #                 print("This is else")
    #                 return False
    #         else:
    #             return False
    #     except Exception as e:
    #         print(e)

    # def callBackup(self):
    #     self.cur.execute("SELECT DISTINCT(date) FROM Attendance")
    #     table_name = self.cur.fetchall()
    #     print(len(table_name))
    #     if len(table_name) > 1:
    #         self.backup()
    #     else:
    #         self.backupAttendance()